package online.shixun.demo.eshop.module.user.mapper;

import java.util.List;
import online.shixun.demo.eshop.dto.EshopRole;
import online.shixun.demo.eshop.dto.EshopRoleCriteria;
import online.shixun.demo.eshop.dto.EshopUser;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface EshopRoleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @SelectProvider(type=EshopRoleSqlProvider.class, method="countByExample")
    long countByExample(EshopRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @DeleteProvider(type=EshopRoleSqlProvider.class, method="deleteByExample")
    int deleteByExample(EshopRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @Delete({
        "delete from eshop_role",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @Insert({
        "insert into eshop_role (id, is_del, ",
        "create_time, update_time, ",
        "role_name, role_description)",
        "values (#{id,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, ",
        "#{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, ",
        "#{roleName,jdbcType=VARCHAR}, #{roleDescription,jdbcType=VARCHAR})"
    })
    int insert(EshopRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @InsertProvider(type=EshopRoleSqlProvider.class, method="insertSelective")
    int insertSelective(EshopRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @SelectProvider(type=EshopRoleSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="is_del", property="isDel", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
        @Result(column="role_name", property="roleName", jdbcType=JdbcType.VARCHAR),
        @Result(column="role_description", property="roleDescription", jdbcType=JdbcType.VARCHAR)
    })
    List<EshopRole> selectByExample(EshopRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @Select({
        "select",
        "id, is_del, create_time, update_time, role_name, role_description",
        "from eshop_role",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="is_del", property="isDel", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
        @Result(column="role_name", property="roleName", jdbcType=JdbcType.VARCHAR),
        @Result(column="role_description", property="roleDescription", jdbcType=JdbcType.VARCHAR)
    })
    EshopRole selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @UpdateProvider(type=EshopRoleSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") EshopRole record, @Param("example") EshopRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @UpdateProvider(type=EshopRoleSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") EshopRole record, @Param("example") EshopRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @UpdateProvider(type=EshopRoleSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(EshopRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_role
     *
     * @mbg.generated Fri May 11 10:30:06 CST 2018
     */
    @Update({
        "update eshop_role",
        "set is_del = #{isDel,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=DATE},",
          "update_time = #{updateTime,jdbcType=DATE},",
          "role_name = #{roleName,jdbcType=VARCHAR},",
          "role_description = #{roleDescription,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(EshopRole record);


    @Select({
            "select",
            "r.id, r.is_del, r.create_time, r.update_time, r.role_name, r.role_description",
            "FROM `eshop_role` r ",
            "INNER JOIN `eshop_user_role` u ON u.`role_id`=r.`id` AND r.`is_del`=2 AND u.`user_id` =#{user.id}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="is_del", property="isDel", jdbcType=JdbcType.INTEGER),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
            @Result(column="role_name", property="roleName", jdbcType=JdbcType.VARCHAR),
            @Result(column="role_description", property="roleDescription", jdbcType=JdbcType.VARCHAR)
    })
    List<EshopRole> getRoles(@Param("user") EshopUser user);
}