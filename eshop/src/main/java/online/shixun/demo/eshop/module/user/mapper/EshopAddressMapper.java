package online.shixun.demo.eshop.module.user.mapper;

import java.util.List;

import online.shixun.demo.eshop.dto.EshopAddress;
import online.shixun.demo.eshop.dto.EshopAddressCriteria;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface EshopAddressMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @SelectProvider(type = EshopAddressSqlProvider.class, method = "countByExample")
    long countByExample(EshopAddressCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @DeleteProvider(type = EshopAddressSqlProvider.class, method = "deleteByExample")
    int deleteByExample(EshopAddressCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @Delete({
            "delete from eshop_address",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @Insert({
            "insert into eshop_address (id, is_del, ",
            "create_time, update_time, ",
            "user_id, state_id, ",
            "province_id, city_id, ",
            "town_id, address_location, ",
            "address_phone, address_postcode, ",
            "address_faddr_axes, address_is_def, ",
            "address_name, address_recipients)",
            "values (#{id,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, ",
            "#{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, ",
            "#{userId,jdbcType=VARCHAR}, #{stateId,jdbcType=VARCHAR}, ",
            "#{provinceId,jdbcType=VARCHAR}, #{cityId,jdbcType=VARCHAR}, ",
            "#{townId,jdbcType=VARCHAR}, #{addressLocation,jdbcType=VARCHAR}, ",
            "#{addressPhone,jdbcType=VARCHAR}, #{addressPostcode,jdbcType=INTEGER}, ",
            "#{addressFaddrAxes,jdbcType=VARCHAR}, #{addressIsDef,jdbcType=INTEGER}, ",
            "#{addressName,jdbcType=VARCHAR}, #{addressRecipients,jdbcType=VARCHAR})"
    })
    int insert(EshopAddress record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @InsertProvider(type = EshopAddressSqlProvider.class, method = "insertSelective")
    int insertSelective(EshopAddress record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @SelectProvider(type = EshopAddressSqlProvider.class, method = "selectByExample")
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "is_del", property = "isDel", jdbcType = JdbcType.INTEGER),
            @Result(column = "create_time", property = "createTime", jdbcType = JdbcType.DATE),
            @Result(column = "update_time", property = "updateTime", jdbcType = JdbcType.DATE),
            @Result(column = "user_id", property = "userId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "state_id", property = "stateId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "province_id", property = "provinceId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "city_id", property = "cityId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "town_id", property = "townId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_location", property = "addressLocation", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_phone", property = "addressPhone", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_postcode", property = "addressPostcode", jdbcType = JdbcType.INTEGER),
            @Result(column = "address_faddr_axes", property = "addressFaddrAxes", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_is_def", property = "addressIsDef", jdbcType = JdbcType.INTEGER),
            @Result(column = "address_name", property = "addressName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_recipients", property = "addressRecipients", jdbcType = JdbcType.VARCHAR)
    })
    List<EshopAddress> selectByExample(EshopAddressCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @Select({
            "select",
            "id, is_del, create_time, update_time, user_id, state_id, province_id, city_id, ",
            "town_id, address_location, address_phone, address_postcode, address_faddr_axes, ",
            "address_is_def, address_name, address_recipients",
            "from eshop_address",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "is_del", property = "isDel", jdbcType = JdbcType.INTEGER),
            @Result(column = "create_time", property = "createTime", jdbcType = JdbcType.DATE),
            @Result(column = "update_time", property = "updateTime", jdbcType = JdbcType.DATE),
            @Result(column = "user_id", property = "userId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "state_id", property = "stateId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "province_id", property = "provinceId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "city_id", property = "cityId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "town_id", property = "townId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_location", property = "addressLocation", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_phone", property = "addressPhone", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_postcode", property = "addressPostcode", jdbcType = JdbcType.INTEGER),
            @Result(column = "address_faddr_axes", property = "addressFaddrAxes", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_is_def", property = "addressIsDef", jdbcType = JdbcType.INTEGER),
            @Result(column = "address_name", property = "addressName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_recipients", property = "addressRecipients", jdbcType = JdbcType.VARCHAR)
    })
    EshopAddress selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @UpdateProvider(type = EshopAddressSqlProvider.class, method = "updateByExampleSelective")
    int updateByExampleSelective(@Param("record") EshopAddress record, @Param("example") EshopAddressCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @UpdateProvider(type = EshopAddressSqlProvider.class, method = "updateByExample")
    int updateByExample(@Param("record") EshopAddress record, @Param("example") EshopAddressCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @UpdateProvider(type = EshopAddressSqlProvider.class, method = "updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(EshopAddress record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table eshop_address
     *
     * @mbg.generated Thu May 17 16:36:46 CST 2018
     */
    @Update({
            "update eshop_address",
            "set is_del = #{isDel,jdbcType=INTEGER},",
            "create_time = #{createTime,jdbcType=DATE},",
            "update_time = #{updateTime,jdbcType=DATE},",
            "user_id = #{userId,jdbcType=VARCHAR},",
            "state_id = #{stateId,jdbcType=VARCHAR},",
            "province_id = #{provinceId,jdbcType=VARCHAR},",
            "city_id = #{cityId,jdbcType=VARCHAR},",
            "town_id = #{townId,jdbcType=VARCHAR},",
            "address_location = #{addressLocation,jdbcType=VARCHAR},",
            "address_phone = #{addressPhone,jdbcType=VARCHAR},",
            "address_postcode = #{addressPostcode,jdbcType=INTEGER},",
            "address_faddr_axes = #{addressFaddrAxes,jdbcType=VARCHAR},",
            "address_is_def = #{addressIsDef,jdbcType=INTEGER},",
            "address_name = #{addressName,jdbcType=VARCHAR},",
            "address_recipients = #{addressRecipients,jdbcType=VARCHAR}",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(EshopAddress record);


    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "is_del", property = "isDel", jdbcType = JdbcType.INTEGER),
            @Result(column = "create_time", property = "createTime", jdbcType = JdbcType.DATE),
            @Result(column = "update_time", property = "updateTime", jdbcType = JdbcType.DATE),
            @Result(column = "user_id", property = "userId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "state_id", property = "stateId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "province_id", property = "provinceId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "city_id", property = "cityId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "town_id", property = "townId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_location", property = "addressLocation", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_phone", property = "addressPhone", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_postcode", property = "addressPostcode", jdbcType = JdbcType.INTEGER),
            @Result(column = "address_faddr_axes", property = "addressFaddrAxes", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_is_def", property = "addressIsDef", jdbcType = JdbcType.INTEGER),
            @Result(column = "address_name", property = "addressName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "address_recipients", property = "addressRecipients", jdbcType = JdbcType.VARCHAR),
            @Result(
                    column = "state_id", property = "state",
                    one = @One(select = "online.shixun.demo.eshop.module.address.mapper.EshopAddressStateMapper.selectByPrimaryKey", fetchType = FetchType.EAGER)
            ),
            @Result(
                    column = "province_id", property = "province",
                    one = @One(select = "online.shixun.demo.eshop.module.address.mapper.EshopAddressProvinceMapper.selectByPrimaryKey", fetchType = FetchType.EAGER)
            ),
            @Result(
                    column = "city_id", property = "city",
                    one = @One(select = "online.shixun.demo.eshop.module.address.mapper.EshopAddressCityMapper.selectByPrimaryKey", fetchType = FetchType.EAGER)
            ),
            @Result(
                    column = "town_id", property = "town",
                    one = @One(select = "online.shixun.demo.eshop.module.address.mapper.EshopAddressTownMapper.selectByPrimaryKey", fetchType = FetchType.EAGER)
            )
    })
    @Select(value = {
            "SELECT",
            "address.*",
            "FROM `eshop_address` address",
            "WHERE address.`is_del`=2 AND address.`user_id`=#{userId}",
            "ORDER BY address.`address_is_def` DESC"
    })
    List<EshopAddress> getUserAddress(@Param("userId") String userId);
}